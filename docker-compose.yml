version: "3.3"
services:
  minio:
    image: minio/minio
    entrypoint: sh
    command: -c "mkdir -p /data/mwdb && minio server --address 0.0.0.0:9000 --console-address :8070 /data"
    environment:
      MINIO_ACCESS_KEY: mwdb
      MINIO_SECRET_KEY: mwdbmwdb
    ports:
      - "127.0.0.1:8090:9000"
      - "127.0.0.1:8070:8070"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
  postgres:
    image: postgres:13.1
    environment:
      POSTGRES_USER: mwdb
      POSTGRES_DB: mwdb
      POSTGRES_PASSWORD: mwdbsecretpass
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:alpine
    ports:
      - "127.0.0.1:8379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
  mwdb:
    image: certpl/mwdb:v2.10.1
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./config/karton.docker.ini:/etc/karton/karton.ini
    environment:
      MWDB_REDIS_URI: "redis://redis/"
      MWDB_POSTGRES_URI: "postgresql://mwdb:mwdbsecretpass@postgres/mwdb"
      MWDB_ADMIN_PASSWORD: "admin"
      MWDB_SECRET_KEY: "secretkey"
      MWDB_STORAGE_PROVIDER: "s3"
      MWDB_HASH_PATHING: "0"
      MWDB_S3_STORAGE_ENDPOINT: "minio:9000"
      MWDB_S3_STORAGE_ACCESS_KEY: "mwdb"
      MWDB_S3_STORAGE_SECRET_KEY: "mwdbmwdb"
      MWDB_S3_STORAGE_BUCKET_NAME: "mwdb"
      MWDB_ENABLE_KARTON: "1"
  mwdb-web:
    depends_on:
      - mwdb
    image: certpl/mwdb-web:v2.10.1
    ports:
      - "127.0.0.1:8080:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/api/server"]
      interval: 30s
      timeout: 20s
      retries: 3
  karton-system:
    image: certpl/karton-system:v5.3.0
    depends_on:
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./config/karton.docker.ini:/etc/karton/karton.ini
    entrypoint: karton-system
    command: --setup-bucket
  karton-classifier:
    image: certpl/karton-classifier:v2.0.0
    depends_on:
      - redis
      - minio
    volumes:
      - ./config/karton.docker.ini:/etc/karton/karton.ini
  karton-dashboard:
    image: certpl/karton-dashboard:v1.5.0
    depends_on:
      - redis
      - minio
    volumes:
      - ./config/karton.docker.ini:/etc/karton/karton.ini
    ports:
      - "127.0.0.1:8030:5000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8030/varz"]
      interval: 30s
      timeout: 20s
      retries: 3
  karton-mwdb-reporter:
    image: certpl/karton-mwdb-reporter:v1.3.0
    depends_on:
      - redis
      - minio
      - mwdb-web
    volumes:
      - ./config/karton.docker.ini:/etc/karton/karton.ini
